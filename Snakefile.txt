rule all:
    input:
#        "results/results_lasso.txt",
        "results/results_svm.txt",
        "results/results_mlpnn.txt",
        "results/results_random_forest.txt",
#        "results/results_processed_samples_stats.csv",
        "preprocessing_output/processed_samples.csv"

rule preprocess:
    input:
        samp="samples/",
        meta="metadata/metadata_dummy.tsv"
    output:
        samp_out="preprocessing_output/processed_samples.csv",
        meta_out="preprocessing_output/preprocessed_metadata.csv",
 #       stat_out="results/processed_samples_stats.csv"
    shell:
        "python scripts/term_processing.py {input.samp} IPR {input.meta} {output.samp_out} {output.meta_out} 100 0.9 False"

#rule ml_lasso:
#    input:
#        samples="preprocessing_output/processed_samples.csv",
#        targets="preprocessing_output/preprocessed_metadata.csv"
#    output:
#        "results/results_lasso.txt"
#    shell:
#        "python scripts/ml/lasso.py {input.samples} {input.targets} {output} 5"

rule ml_svm:
    input:
        samples="preprocessing_output/processed_samples.csv",
        targets="preprocessing_output/preprocessed_metadata.csv"
    output:
        "results/results_svm.txt"
    shell:
        "python scripts/ml/svm.py {input.samples} {input.targets} {output} 5"

rule ml_random_forest:
    input:
        samples="preprocessing_output/processed_samples.csv",
        targets="preprocessing_output/preprocessed_metadata.csv"
    output:
        "results/results_random_forest.txt"
    shell:
        "python scripts/ml/random_forest.py {input.samples} {input.targets} {output} 5"

rule ml_mplnn:
    input:
        samples="preprocessing_output/processed_samples.csv",
        targets="preprocessing_output/preprocessed_metadata.csv"
    output:
        "results/results_mlpnn.txt"
    shell:
        "python scripts/ml/mlpnn.py {input.samples} {input.targets} {output} 5"
